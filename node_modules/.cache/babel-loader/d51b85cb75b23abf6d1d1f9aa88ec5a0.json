{"ast":null,"code":"var _jsxFileName = \"/Users/seanchunlaptop/Desktop/syrg-file/web-text-research/src/screens/Chat.js\";\nimport React, { Component } from 'react';\nimport './Message.css';\nimport MessageList from './MessageList.js';\nimport Bar from './Bar.js';\nimport SendMessageForm from './SendMessageForm.js';\nimport io from 'socket.io-client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag'; //Chat page\n//Based on code from this video -> https://www.youtube.com/watch?v=jFNHerJqvFw\n\nvar MESSAGE_DATA = [];\nconst url = \"http://localhost:3001/graphql\";\nconst query = \"\\n    {managers\\n        {employees \\n            {\\n            employeeName\\n            phoneNumber\\n            convo \\n            {\\n            sent\\n            textBody  \\n            }\\n        }\\n    }\\n    }\\n    \";\nconst opts = {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    query\n  })\n};\n\nclass Chat extends React.Component {\n  //MESSAGE_DATA = this.MESSAGE_DATA;\n  constructor() {\n    super();\n\n    this.sendMessage = text => {\n      var msgtext = {\n        text: text\n      };\n      console.log(JSON.stringify({\n        text\n      }));\n      fetch('/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(msgtext)\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          this.setState({\n            message: '',\n            error: false,\n            submitting: false\n          });\n        } else {\n          this.setState({\n            error: true,\n            submitting: false\n          });\n        }\n      });\n      this.componentDidMount();\n      this.setState({\n        state: this.state\n      });\n    };\n\n    this.state = {\n      messages: MESSAGE_DATA,\n      name: '',\n      greeting: ''\n    };\n    this.getMessageData = this.getMessageData.bind(this);\n  }\n\n  async getMessageData() {\n    const response = await fetch(url, opts);\n    const json = await response.json(); //const data = await this.getMessageData();\n\n    this.setState({\n      messages: json.data.managers.employees.convo\n    });\n    this.setState({\n      state: this.state\n    });\n  }\n\n  componentDidMount() {\n    // if(data===null){\n    //\n    // } else {\n    //     this.setState({messages: data.managers.employees.convo})\n    // }\n    //this.setState({messages: MESSAGE_DATA})\n    this.getMessageData(); //this.setState({state: this.state})\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"script\", {\n      src: \"/socket.io/socket.io.js\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"script\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"var msg = io('http://localhost:3002/socket'); msg.on('onMessage', function () \", this.componentDidMount(), \");\")), React.createElement(Bar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(MessageList, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(SendMessageForm, {\n      sendMessage: this.sendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/seanchunlaptop/Desktop/syrg-file/web-text-research/src/screens/Chat.js"],"names":["React","Component","MessageList","Bar","SendMessageForm","io","makeStyles","Grid","useQuery","gql","MESSAGE_DATA","url","query","opts","method","headers","body","JSON","stringify","Chat","constructor","sendMessage","text","msgtext","console","log","fetch","then","res","json","data","success","setState","message","error","submitting","componentDidMount","state","messages","name","greeting","getMessageData","bind","response","managers","employees","convo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CACA;AACA;;AAEA,IAAIC,YAAY,GAAG,EAAnB;AAIA,MAAMC,GAAG,kCAAT;AACA,MAAMC,KAAK,sOAAX;AAeA,MAAMC,IAAI,GAAG;AACTC,EAAAA,MAAM,EAAE,MADC;AAETC,EAAAA,OAAO,EAAE;AAAE,oBAAgB;AAAlB,GAFA;AAGTC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA;AAAF,GAAf;AAHG,CAAb;;AAMA,MAAMO,IAAN,SAAmBnB,KAAK,CAACC,SAAzB,CAAmC;AAC/B;AACAmB,EAAAA,WAAW,GAAG;AACV;;AADU,SAcdC,WAdc,GAcCC,IAAD,IAAS;AAEnB,UAAIC,OAAO,GAAG;AAACD,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACC,SAAL,CAAe;AAACI,QAAAA;AAAD,OAAf,CAAZ;AACAI,MAAAA,KAAK,CAAC,eAAD,EAAkB;AACnBZ,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFU;AAKnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeK,OAAf;AALa,OAAlB,CAAL,CAOKI,IAPL,CAOUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPjB,EAQKF,IARL,CAQUG,IAAI,IAAI;AACV,YAAIA,IAAI,CAACC,OAAT,EAAkB;AACd,eAAKC,QAAL,CAAc;AACVC,YAAAA,OAAO,EAAE,EADC;AAEVC,YAAAA,KAAK,EAAE,KAFG;AAGVC,YAAAA,UAAU,EAAE;AAHF,WAAd;AAKH,SAND,MAMO;AACH,eAAKH,QAAL,CAAc;AACVE,YAAAA,KAAK,EAAE,IADG;AAEVC,YAAAA,UAAU,EAAE;AAFF,WAAd;AAIH;AACJ,OArBL;AAuBA,WAAKC,iBAAL;AACA,WAAKJ,QAAL,CAAc;AAACK,QAAAA,KAAK,EAAE,KAAKA;AAAb,OAAd;AAEH,KA5Ca;;AAEV,SAAKA,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE5B,YADD;AAET6B,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAwCD,QAAMD,cAAN,GAAuB;AACnB,UAAME,QAAQ,GAAG,MAAMjB,KAAK,CAACf,GAAD,EAAME,IAAN,CAA5B;AACA,UAAMgB,IAAI,GAAG,MAAMc,QAAQ,CAACd,IAAT,EAAnB,CAFmB,CAGnB;;AACA,SAAKG,QAAL,CAAc;AAACM,MAAAA,QAAQ,EAAET,IAAI,CAACC,IAAL,CAAUc,QAAV,CAAmBC,SAAnB,CAA6BC;AAAxC,KAAd;AACA,SAAKd,QAAL,CAAc;AAACK,MAAAA,KAAK,EAAE,KAAKA;AAAb,KAAd;AACH;;AAGDD,EAAAA,iBAAiB,GAAG;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,SAAKK,cAAL,GARgB,CAUhB;AACH;;AAGDM,EAAAA,MAAM,GACN;AAEQ,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,GAAG,EAAC,yBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAGI,KAAKX,iBAAL,EAHJ,OAFA,CADJ,EAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAWI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAYI,oBAAC,eAAD;AAAiB,MAAA,WAAW,EAAE,KAAKjB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ;AAgBX;;AA5FkC;;AAkGnC,eAAeF,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport './Message.css';\nimport MessageList from './MessageList.js'\nimport Bar from './Bar.js'\nimport SendMessageForm from './SendMessageForm.js'\nimport io from 'socket.io-client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport {useQuery} from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\n//Chat page\n//Based on code from this video -> https://www.youtube.com/watch?v=jFNHerJqvFw\n\nvar MESSAGE_DATA = [];\n\n\n\nconst url = `http://localhost:3001/graphql`;\nconst query = `\n    {managers\n        {employees \n            {\n            employeeName\n            phoneNumber\n            convo \n            {\n            sent\n            textBody  \n            }\n        }\n    }\n    }\n    `\nconst opts = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ query })\n};\n\nclass Chat extends React.Component {\n    //MESSAGE_DATA = this.MESSAGE_DATA;\n    constructor() {\n        super()\n        this.state = {\n            messages: MESSAGE_DATA,\n            name: '',\n            greeting: ''\n        };\n        this.getMessageData = this.getMessageData.bind(this);\n    }\n\n\n\n\n\n    sendMessage = (text) =>{\n\n        var msgtext = {text: text};\n        console.log(JSON.stringify({text}))\n        fetch('/api/messages', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(msgtext)\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    this.setState({\n                        message: '',\n                        error: false,\n                        submitting: false\n                    });\n                } else {\n                    this.setState({\n                        error: true,\n                        submitting: false\n                    });\n                }\n            });\n\n        this.componentDidMount();\n        this.setState({state: this.state})\n\n    }\n\n\n\n    async getMessageData() {\n        const response = await fetch(url, opts);\n        const json = await response.json();\n        //const data = await this.getMessageData();\n        this.setState({messages: json.data.managers.employees.convo})\n        this.setState({state: this.state})\n    }\n\n\n    componentDidMount() {\n\n        // if(data===null){\n        //\n        // } else {\n        //     this.setState({messages: data.managers.employees.convo})\n        // }\n        //this.setState({messages: MESSAGE_DATA})\n        this.getMessageData()\n\n        //this.setState({state: this.state})\n    }\n\n\n    render()\n    {\n\n            return (\n                <div className=\"Chat\">\n                    <div>\n                    <script src=\"/socket.io/socket.io.js\"></script>\n                    <script>\n                        var msg = io('http://localhost:3002/socket');\n                        msg.on('onMessage', function () {\n                        this.componentDidMount()\n                    });\n                    </script>\n                    </div>\n                    <Bar/>\n                    <MessageList messages={this.state.messages}/>\n                    <SendMessageForm sendMessage={this.sendMessage}/>\n                </div>\n            );\n}\n}\n\n\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}